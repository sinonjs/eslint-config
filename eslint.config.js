"use strict";
const js = require("@eslint/js");
const mocha = require("eslint-plugin-mocha");
const jsdoc = require("eslint-plugin-jsdoc");
const compat = require("eslint-plugin-compat");
const globals = require("globals");

const possibleErrors = {
  "for-direction": "error",
  "getter-return": ["error", { allowImplicit: true }],
  "no-async-promise-executor": "off",
  "no-await-in-loop": "off",
  "no-compare-neg-zero": "error",
  "no-cond-assign": "error",
  "no-console": "error",
  "no-constant-condition": "error",
  "no-control-regex": "error",
  "no-debugger": "error",
  "no-dupe-args": "error",
  "no-dupe-else-if": "error",
  "no-dupe-keys": "error",
  "no-duplicate-case": "error",
  "no-empty": "error",
  "no-empty-character-class": "error",
  "no-ex-assign": "error",
  "no-extra-boolean-cast": "error",
  "no-func-assign": "error",
  "no-import-assign": "error",
  "no-inner-declarations": ["error", "functions"],
  "no-invalid-regexp": "error",
  "no-irregular-whitespace": "error",
  "no-loss-of-precision": "error",
  "no-misleading-character-class": "error",
  "no-obj-calls": "error",
  "no-promise-executor-return": "error",
  "no-prototype-builtins": "off",
  "no-regex-spaces": "error",
  "no-setter-return": "error",
  "no-sparse-arrays": "error",
  "no-template-curly-in-string": "off",
  "no-unexpected-multiline": "error",
  "no-unreachable": "error",
  "no-unreachable-loop": "error",
  "no-unsafe-finally": "error",
  "no-unsafe-negation": "error",
  "no-unsafe-optional-chaining": "error",
  "no-useless-backreference": "error",
  "require-atomic-updates": "off",
  "use-isnan": "error",
  "valid-typeof": "error",
};

const bestPractices = {
  "accessor-pairs": "error",
  "array-callback-return": "error",
  "block-scoped-var": "error",
  "class-methods-use-this": "off",
  complexity: ["error", 18],
  "consistent-return": "error",
  curly: ["error", "all"],
  "default-case": "error",
  "default-case-last": "error",
  "default-param-last": "error",
  "dot-notation": ["error", { allowKeywords: true }],
  eqeqeq: ["error", "allow-null"],
  "grouped-accessor-pairs": ["error", "getBeforeSet"],
  "guard-for-in": "error",
  "max-classes-per-file": "off",
  "no-alert": "error",
  "no-caller": "error",
  "no-case-declarations": "error",
  "no-constructor-return": "error",
  "no-div-regex": "error",
  "no-else-return": "error",
  "no-empty-function": "error",
  "no-empty-pattern": "off",
  "no-eq-null": "error",
  "no-eval": "error",
  "no-extend-native": "error",
  "no-extra-bind": "error",
  "no-extra-label": "error",
  "no-fallthrough": "error",
  "no-global-assign": "error",
  "no-implicit-coercion": "error",
  "no-implicit-globals": "error",
  "no-implied-eval": "error",
  "no-invalid-this": "off",
  "no-iterator": "error",
  "no-labels": "error",
  "no-lone-blocks": "error",
  "no-loop-func": "error",
  "no-magic-numbers": "off",
  "no-multi-str": "error",
  "no-new": "error",
  "no-new-func": "error",
  "no-new-wrappers": "error",
  "no-nonoctal-decimal-escape": "error",
  "no-octal": "error",
  "no-octal-escape": "error",
  "no-param-reassign": "error",
  "no-proto": "error",
  "no-redeclare": "error",
  "no-restricted-properties": "error",
  "no-return-assign": "error",
  "no-return-await": "error",
  "no-script-url": "error",
  "no-self-assign": "error",
  "no-self-compare": "error",
  "no-sequences": "error",
  "no-throw-literal": "error",
  "no-unmodified-loop-condition": "error",
  "no-unused-expressions": "error",
  "no-unused-labels": "error",
  "no-useless-call": "error",
  "no-useless-catch": "error",
  "no-useless-concat": "error",
  "no-useless-escape": "error",
  "no-useless-return": "off",
  "no-void": "error",
  "no-warning-comments": [
    "error",
    { terms: ["todo", "fixme", "xxx"], location: "start" },
  ],
  "no-with": "error",
  "prefer-named-capture-group": "off",
  "prefer-promise-reject-errors": "error",
  "prefer-regex-literals": "off",
  radix: "off",
  "require-await": "error",
  "require-unicode-regexp": "off",
  "vars-on-top": "off",
  yoda: ["error", "never"],
};

const strictMode = {
  strict: ["error", "global"],
};

const variables = {
  "init-declarations": "off",
  "no-delete-var": "error",
  "no-label-var": "error",
  "no-restricted-globals": "off",
  "no-shadow": "error",
  "no-shadow-restricted-names": "error",
  "no-undef": "error",
  "no-undef-init": "error",
  "no-undefined": "off",
  "no-unused-vars": ["error", { vars: "all", args: "after-used" }],
  "no-use-before-define": ["error", { functions: false }],
};

const stylisticIssues = {
  camelcase: "error",
  "consistent-this": ["off", "that"],
  "func-name-matching": "off",
  "func-names": "off",
  "func-style": ["off", "declaration"],
  "id-denylist": "off",
  "id-length": "off",
  "id-match": "off",
  "line-comment-position": "off",
  "linebreak-style": ["off", "unix"],
  "lines-around-comment": "off",
  "lines-between-class-members": "off",
  "max-depth": ["off", 4],
  "max-lines": "off",
  "max-lines-per-function": "off",
  "max-nested-callbacks": ["warn", 2],
  "max-params": ["off", 3],
  "max-statements": ["off", 10],
  "max-statements-per-line": "off",
  "multiline-comment-style": "off",
  "new-cap": "error",
  "no-array-constructor": "error",
  "no-bitwise": "error",
  "no-continue": "error",
  "no-inline-comments": "off",
  "no-lonely-if": "off",
  "no-mixed-operators": "off",
  "no-multi-assign": "off",
  "no-negated-condition": "off",
  "no-nested-ternary": "error",
  "no-new-object": "error",
  "no-plusplus": "off",
  "no-restricted-syntax": "off",
  "no-tabs": "off",
  "no-ternary": "off",
  "no-underscore-dangle": "error",
  "no-unneeded-ternary": "off",
  "one-var": "off",
  "one-var-declaration-per-line": "off",
  "operator-assignment": ["off", "always"],
  "padding-line-between-statements": "off",
  "prefer-object-spread": "off",
  "sort-keys": "off",
  "sort-vars": "off",
  "spaced-comment": "off",
};

const ecmaScript6 = {
  "arrow-body-style": ["error", "as-needed"],
  "constructor-super": "error",
  "no-class-assign": "error",
  "no-confusing-arrow": "error",
  "no-const-assign": "error",
  "no-dupe-class-members": "error",
  "no-duplicate-imports": "error",
  "no-new-symbol": "error",
  "no-restricted-exports": "off",
  "no-restricted-imports": "off",
  "no-this-before-super": "error",
  "no-useless-computed-key": "error",
  "no-useless-constructor": "error",
  "no-useless-rename": "error",
  "no-var": 0,
  "object-shorthand": 0,
  "prefer-arrow-callback": "off",
  "prefer-const": "error",
  "prefer-destructuring": "off",
  "prefer-numeric-literals": "off",
  "prefer-rest-params": "off",
  "prefer-spread": "off",
  "prefer-template": "error",
  "require-yield": 0,
  "sort-imports": "off",
  "symbol-description": "error",
};

const jsDocRules = {
  "jsdoc/require-param-description": "off",
  "jsdoc/require-returns-description": "off",
};

const mochaRecommended = mocha.configs.recommended;
const jsdocRecommended = jsdoc.configs["recommended-typescript-flavor"];

const overrides = [
  {
    files: ["**/*.test.*", "**/*-test.*"],
    languageOptions: {
      globals: {
        ...globals.mocha,
        mocha: "readonly",
      },
    },
    plugins: {
      mocha: mocha,
    },
    rules: {
      ...mochaRecommended.rules,
      ...jsdocRecommended.rules,
      "max-nested-callbacks": ["warn", 5],
      "jsdoc/require-jsdoc": "off",
      "mocha/handle-done-callback": "error",
      "mocha/max-top-level-suites": "off",
      "mocha/no-async-describe": "error",
      "mocha/no-exclusive-tests": "error",
      "mocha/no-exports": "error",
      "mocha/no-global-tests": "error",
      "mocha/no-hooks": "off",
      "mocha/no-hooks-for-single-case": "off",
      "mocha/no-identical-title": "error",
      "mocha/no-mocha-arrows": "error",
      "mocha/no-nested-tests": "error",
      "mocha/no-pending-tests": "error",
      "mocha/no-return-and-callback": "error",
      "mocha/no-return-from-async": "error",
      "mocha/no-setup-in-describe": "error",
      "mocha/no-sibling-hooks": "error",
      "mocha/no-skipped-tests": "warn",
      "mocha/no-synchronous-tests": "off",
      "mocha/no-top-level-hooks": "error",
      "mocha/prefer-arrow-callback": "off",
      "mocha/valid-suite-description": "off",
      "mocha/valid-test-description": "off",
    },
  },
];

module.exports = [
  js.configs.recommended,
  {
    languageOptions: {
      ecmaVersion: "latest",
      sourceType: "commonjs",
      globals: {
        ...globals.node,
        ...globals.browser,
      },
    },
    plugins: {
      compat: compat,
      jsdoc: jsdoc,
    },
    settings: {
      polyfills: [
        "Promise",
        "Symbol",
        "fetch",
        "Array.prototype.includes",
        "Map",
        "Set",
      ],
      targets: ["last 2 versions", "ie >= 11"],
      jsdoc: {
        ignorePrivate: true,
      },
    },
    rules: {
      ...possibleErrors,
      ...bestPractices,
      ...strictMode,
      ...variables,
      ...stylisticIssues,
      ...ecmaScript6,
      ...jsDocRules,
    },
  },
  ...overrides,
];
